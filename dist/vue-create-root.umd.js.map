{"version":3,"file":"vue-create-root.umd.js","sources":["../src/utils.ts","../src/const.ts","../src/createRoot.ts","../src/CreateRootClassWrapFunction.ts","../src/main.ts"],"sourcesContent":["import Vue, { VueConstructor, Component, VNodeData, AsyncComponent, ComponentOptions } from 'vue';\nimport { RootComponent, InputComponent } from './interface';\n\n/**\n * 包装下throw\n * @param {String} 错误描述\n */\nexport function throwError(message: string): never {\n    throw (`__PKG_NAME__: ${message}`);\n};\n\n/**\n * 获取组件的描述数据\n * @param {ComponentOptions<Vue>} 支持的组件格式\n */\nexport function getComponentPlainObject(component: InputComponent): ComponentOptions<Vue> {\n    // 暂时只支持componentObject\n    return component as ComponentOptions<Vue>;\n}\n\n/**\n * 解析别名\n * @param {String|String[]} 组件name字段或as字段\n * @param {String} 前缀 \n * @returns  {scope: string,method: string,UNIQUE_PATH: string} scope: 作用域名, methods: 方法名, UNIQUE_PATH: 命令名\n */\nexport function parseAlias(name: string | [string, string] = '', prefix: string): {\n    scope?: string,\n    method: string,\n    UNIQUE_PATH: string\n} {\n    let method = '';\n    let scope: string | undefined;\n    if (undefined === name || '' === name) {\n        throwError(`请用as给这个命令起个别名!`);\n    }\n    else if ('string' === typeof name) {\n        method = prefix + name;\n    }\n    else if (Array === name.constructor) {\n        if (1 < name.length) {\n            scope = prefix + name[0];\n            method = name[1];\n        } else {\n            method = prefix + name[0];\n        }\n    }\n    return {\n        scope,\n        method,\n        // scope+method生成唯一字符串\n        UNIQUE_PATH: undefined === scope ? method : [scope, method].join('.')\n    };\n}\n\n/**\n * 获取快捷方式属性名\n */\nexport function getMatchProp(defaultProp: string, globalDefautProps: string[], component: ComponentOptions<Vue>): string | void {\n    if (undefined !== (<any>component.props)[defaultProp]) {\n        return defaultProp;\n    }\n    // 全局默认属性中是否有\n    else {\n        for (let propKey of globalDefautProps) {\n            if (undefined !== (<any>component.props)[propKey]) {\n                return propKey;\n            }\n        }\n    }\n}\n\n/**\n * 是否是对象\n * @param {Any} 输入\n * @returns {Boolean} 是否是对象\n */\nexport function isObject(input: any): boolean {\n    return Object === input.constructor;\n}\n\n\nexport function mergeVNodeData(oldData: VNodeData|undefined, newData: VNodeData):VNodeData {\n    if (undefined !== oldData) {\n        let key: keyof VNodeData;\n        for (key in newData) {\n            oldData[key] = { ...oldData[key], ...newData[key] }\n        }\n    }\n    return oldData || {};\n}","// insertAdjacentElement参数映射\nexport const INSERT_POSITION_MAP:Record<string, InsertPosition> = {\n    append: 'beforeend',\n    prepend: 'afterbegin',\n    insertAfter: 'afterend',\n    insertBefore: 'beforebegin'\n};","// 核心\n// https://cn.vuejs.org/v2/guide/render-function.html#深入-data-对象\nimport { VNodeData } from 'vue/types/index';\nimport { RootComponent, createRootFn, ChildrenRender } from './interface';\nimport { throwError } from './utils';\nimport { INSERT_POSITION_MAP } from './const';\n\nconst createRoot: createRootFn = (Vue, componentObject, data, childrenRender, options = {}) => {\n\n    const { target = 'body', insertPosition = 'append' } = options;\n    let vNodeData: VNodeData;\n    let _childrenRender: ChildrenRender | undefined = childrenRender;\n    // 组件容器\n    const container = 'string' === typeof target ? document.querySelector(target) : target;\n    if (!container) {\n        throwError('target元素不存在');\n    }\n\n    // 什么元素都无所谓, 因为render中会重新渲染, 最终该标签会被组件标签替换\n    const el = document.createElement('div');\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentElement\n    // 由于throw被封装, ts没办法正确推断container不为空\n    container!.insertAdjacentElement(INSERT_POSITION_MAP[insertPosition], el);\n\n    const root = new Vue({\n        el,\n\n        render(createElement) {\n            // https://cn.vuejs.org/v2/guide/render-function.html#深入-data-对象\n            return createElement(componentObject, vNodeData, _childrenRender && _childrenRender(createElement));\n        },\n    });\n\n    // 对外$romove方法\n    const rootComponent = root.$children[0] as RootComponent;\n    rootComponent.$on('hook:destroyed', () => {\n        // 按照vue作者的说法$destroy中并没有做事件解绑, 而是等待系统回收内存\n        // 所以$destroy因该只是做了解除数据绑定\n        // https://github.com/vuejs/vue/issues/5187\n        root.$destroy();\n        // 删除元素\n        container!.removeChild(rootComponent.$el);\n    });\n\n    rootComponent.$updateRenderData = (newData, newChildrenRender) => {\n        if (undefined !== newData) {\n            vNodeData = ('props' in newData) ? newData : { props: newData };\n        }\n        _childrenRender = newChildrenRender\n        // https://cn.vuejs.org/v2/api/#vm-forceUpdate\n        // 注意它仅仅影响实例本身和插入插槽内容的子组件，而不是所有子组件。\n        root.$forceUpdate();\n    };\n\n    // 为了触发vue动画, 所以必须在实例创建后在执行$forceUpdate;\n    rootComponent.$updateRenderData(data, _childrenRender);\n\n    return rootComponent;\n}\n\nexport default createRoot;","import { VueConstructor, VNodeData } from 'vue/types';\nimport { InputComponent, ChildrenRender, RootComponent, createRootFnExtendOptions, CRootInstance } from './interface';\nimport createRoot from './createRoot';\n\n// createRoot函数的包装类, 主要用来暴露单例和多例2种接口\nexport default (Vue: VueConstructor, inputComponent: InputComponent, globalcreateRootFnExtendOptions?: createRootFnExtendOptions) => {\n    let cRootInstance: CRootInstance | null;\n\n    // 从外部接收Vue和inputComponent\n    return class CreateRoot {\n        /**\n         * 创建单例\n         */\n        static init = (options: VNodeData, childrenRender?: ChildrenRender) => {\n            if (cRootInstance) {\n                cRootInstance.$update(options, childrenRender);\n            } else {\n                cRootInstance = new CreateRoot(options, childrenRender);\n            }\n        }\n\n        /**\n         * 更新单例\n         */\n        static $update = (options: VNodeData, childrenRender?: ChildrenRender) => {\n            if (undefined !== cRootInstance && null !== cRootInstance) {\n                cRootInstance.$update(options, childrenRender)\n            }\n        }\n\n        /**\n         * 销毁单例\n         */\n        static $destroy = () => {\n            if (null !== cRootInstance) {\n                cRootInstance.$destroy();\n                cRootInstance = null;\n            }\n        }\n\n        // 缓存组件实例\n        component: RootComponent;\n\n        constructor(options: VNodeData, childrenRender?: ChildrenRender) {\n            this.component = createRoot(Vue, inputComponent, options, childrenRender, globalcreateRootFnExtendOptions);\n            return this;\n        }\n\n        $update(...args: Parameters<RootComponent['$updateRenderData']>): RootComponent {\n            this.component.$updateRenderData(...args);\n            return this.component;\n        }\n\n        $destroy(): this {\n            this.component.$destroy();\n            return this;\n        }\n    }\n}\n\n","import { VueConstructor } from 'vue';\nimport { InputComponent, createRootFnExtendOptions, createRootFn, Tail } from './interface';\nimport CreateRootClassWrapFunction from './CreateRootClassWrapFunction'\nimport createRoot from './createRoot';\n// https://www.tslang.cn/docs/handbook/declaration-merging.html (模块扩展章节)\n// https://cn.vuejs.org/v2/guide/typescript.html#增强类型以配合插件使用\n\n// ========= 声明 =========\ntype createRoot = ((component: InputComponent, createRootFnExtendOptions: createRootFnExtendOptions) => void)\n    & { version?: string };\ndeclare module 'vue' {\n    interface VueConstructor {\n        createRoot: createRoot;\n\n        createRootClass: createRoot;\n    }\n}\n\n/**\n * 功能实现\n * @param {VueConstructor} Vue构造函数\n *  @param {String} Options.prefix 前缀\n *  @param {String} Options.name $createRoot如果冲突可以改名\n */\nfunction install(Vue: VueConstructor, { as = { $createRoot: '$createRoot' } } = {}) {\n    Vue.createRootClass = (component, createRootFnExtendOptions) => CreateRootClassWrapFunction(Vue, component, createRootFnExtendOptions);\n    Vue.createRoot = Vue.createRootClass;\n    // 核心功能\n    Vue.prototype[as.$createRoot] = (...args: Tail<Parameters<createRootFn>>) => createRoot(Vue, ...args);\n\n    Vue.createRootClass.version = '__VERSION__';\n}\n\nexport default { install };"],"names":[],"mappings":"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"}